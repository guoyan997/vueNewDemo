{"id":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","dependencies":[{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\package.json","includedInParent":true,"mtime":1589276068111},{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\.browserslistrc","includedInParent":true,"mtime":1568098705750},{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@jiaminghi\\bezier-curve\\package.json","includedInParent":true,"mtime":1587966503203},{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@jiaminghi\\bezier-curve\\.babelrc","includedInParent":true,"mtime":1587966503203},{"name":"@babel/runtime/helpers/interopRequireDefault","loc":{"line":3,"column":37},"parent":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@jiaminghi\\bezier-curve\\lib\\core\\bezierCurveToPolyline.js","resolved":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@babel\\runtime\\helpers\\interopRequireDefault.js"},{"name":"@babel/runtime/helpers/slicedToArray","loc":{"line":12,"column":53},"parent":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@jiaminghi\\bezier-curve\\lib\\core\\bezierCurveToPolyline.js","resolved":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@babel\\runtime\\helpers\\slicedToArray.js"},{"name":"@babel/runtime/helpers/toConsumableArray","loc":{"line":14,"column":57},"parent":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@jiaminghi\\bezier-curve\\lib\\core\\bezierCurveToPolyline.js","resolved":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\@babel\\runtime\\helpers\\toConsumableArray.js"}],"generated":{"js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bezierCurveToPolyline = bezierCurveToPolyline;\nexports.getBezierCurveLength = getBezierCurveLength;\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar sqrt = Math.sqrt,\n    pow = Math.pow,\n    ceil = Math.ceil,\n    abs = Math.abs; // Initialize the number of points per curve\n\nvar defaultSegmentPointsNum = 50;\n/**\r\n * @example data structure of bezierCurve\r\n * bezierCurve = [\r\n *  // Starting point of the curve\r\n *  [10, 10],\r\n *  // BezierCurve segment data (controlPoint1, controlPoint2, endPoint)\r\n *  [\r\n *    [20, 20], [40, 20], [50, 10]\r\n *  ],\r\n *  ...\r\n * ]\r\n */\n\n/**\r\n * @description               Abstract the curve as a polyline consisting of N points\r\n * @param {Array} bezierCurve bezierCurve data\r\n * @param {Number} precision  calculation accuracy. Recommended for 1-20. Default = 5\r\n * @return {Object}           Calculation results and related data\r\n * @return {Array}            Option.segmentPoints Point data that constitutes a polyline after calculation\r\n * @return {Number}           Option.cycles Number of iterations\r\n * @return {Number}           Option.rounds The number of recursions for the last iteration\r\n */\n\nfunction abstractBezierCurveToPolyline(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var segmentsNum = bezierCurve.length - 1;\n  var startPoint = bezierCurve[0];\n  var endPoint = bezierCurve[segmentsNum][2];\n  var segments = bezierCurve.slice(1);\n  var getSegmentTPointFuns = segments.map(function (seg, i) {\n    var beginPoint = i === 0 ? startPoint : segments[i - 1][2];\n    return createGetBezierCurveTPointFun.apply(void 0, [beginPoint].concat((0, _toConsumableArray2[\"default\"])(seg)));\n  }); // Initialize the curve to a polyline\n\n  var segmentPointsNum = new Array(segmentsNum).fill(defaultSegmentPointsNum);\n  var segmentPoints = getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum); // Calculate uniformly distributed points by iteratively\n\n  var result = calcUniformPointsByIteration(segmentPoints, getSegmentTPointFuns, segments, precision);\n  result.segmentPoints.push(endPoint);\n  return result;\n}\n/**\r\n * @description  Generate a method for obtaining corresponding point by t according to curve data\r\n * @param {Array} beginPoint    BezierCurve begin point. [x, y]\r\n * @param {Array} controlPoint1 BezierCurve controlPoint1. [x, y]\r\n * @param {Array} controlPoint2 BezierCurve controlPoint2. [x, y]\r\n * @param {Array} endPoint      BezierCurve end point. [x, y]\r\n * @return {Function} Expected function\r\n */\n\n\nfunction createGetBezierCurveTPointFun(beginPoint, controlPoint1, controlPoint2, endPoint) {\n  return function (t) {\n    var tSubed1 = 1 - t;\n    var tSubed1Pow3 = pow(tSubed1, 3);\n    var tSubed1Pow2 = pow(tSubed1, 2);\n    var tPow3 = pow(t, 3);\n    var tPow2 = pow(t, 2);\n    return [beginPoint[0] * tSubed1Pow3 + 3 * controlPoint1[0] * t * tSubed1Pow2 + 3 * controlPoint2[0] * tPow2 * tSubed1 + endPoint[0] * tPow3, beginPoint[1] * tSubed1Pow3 + 3 * controlPoint1[1] * t * tSubed1Pow2 + 3 * controlPoint2[1] * tPow2 * tSubed1 + endPoint[1] * tPow3];\n  };\n}\n/**\r\n * @description Get the distance between two points\r\n * @param {Array} point1 BezierCurve begin point. [x, y]\r\n * @param {Array} point2 BezierCurve controlPoint1. [x, y]\r\n * @return {Number} Expected distance\r\n */\n\n\nfunction getTwoPointDistance(_ref, _ref2) {\n  var _ref3 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n      ax = _ref3[0],\n      ay = _ref3[1];\n\n  var _ref4 = (0, _slicedToArray2[\"default\"])(_ref2, 2),\n      bx = _ref4[0],\n      by = _ref4[1];\n\n  return sqrt(pow(ax - bx, 2) + pow(ay - by, 2));\n}\n/**\r\n * @description Get the sum of the array of numbers\r\n * @param {Array} nums An array of numbers\r\n * @return {Number} Expected sum\r\n */\n\n\nfunction getNumsSum(nums) {\n  return nums.reduce(function (sum, num) {\n    return sum + num;\n  }, 0);\n}\n/**\r\n * @description Get the distance of multiple sets of points\r\n * @param {Array} segmentPoints Multiple sets of point data\r\n * @return {Array} Distance of multiple sets of point data\r\n */\n\n\nfunction getSegmentPointsDistance(segmentPoints) {\n  return segmentPoints.map(function (points, i) {\n    return new Array(points.length - 1).fill(0).map(function (temp, j) {\n      return getTwoPointDistance(points[j], points[j + 1]);\n    });\n  });\n}\n/**\r\n * @description Get the distance of multiple sets of points\r\n * @param {Array} segmentPoints Multiple sets of point data\r\n * @return {Array} Distance of multiple sets of point data\r\n */\n\n\nfunction getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum) {\n  return getSegmentTPointFuns.map(function (getSegmentTPointFun, i) {\n    var tGap = 1 / segmentPointsNum[i];\n    return new Array(segmentPointsNum[i]).fill('').map(function (foo, j) {\n      return getSegmentTPointFun(j * tGap);\n    });\n  });\n}\n/**\r\n * @description Get the sum of deviations between line segment and the average length\r\n * @param {Array} segmentPointsDistance Segment length of polyline\r\n * @param {Number} avgLength            Average length of the line segment\r\n * @return {Number} Deviations\r\n */\n\n\nfunction getAllDeviations(segmentPointsDistance, avgLength) {\n  return segmentPointsDistance.map(function (seg) {\n    return seg.map(function (s) {\n      return abs(s - avgLength);\n    });\n  }).map(function (seg) {\n    return getNumsSum(seg);\n  }).reduce(function (total, v) {\n    return total + v;\n  }, 0);\n}\n/**\r\n * @description Calculate uniformly distributed points by iteratively\r\n * @param {Array} segmentPoints        Multiple setd of points that make up a polyline\r\n * @param {Array} getSegmentTPointFuns Functions of get a point on the curve with t\r\n * @param {Array} segments             BezierCurve data\r\n * @param {Number} precision           Calculation accuracy\r\n * @return {Object} Calculation results and related data\r\n * @return {Array}  Option.segmentPoints Point data that constitutes a polyline after calculation\r\n * @return {Number} Option.cycles Number of iterations\r\n * @return {Number} Option.rounds The number of recursions for the last iteration\r\n */\n\n\nfunction calcUniformPointsByIteration(segmentPoints, getSegmentTPointFuns, segments, precision) {\n  // The number of loops for the current iteration\n  var rounds = 4; // Number of iterations\n\n  var cycles = 1;\n\n  var _loop = function _loop() {\n    // Recalculate the number of points per curve based on the last iteration data\n    var totalPointsNum = segmentPoints.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0); // Add last points of segment to calc exact segment length\n\n    segmentPoints.forEach(function (seg, i) {\n      return seg.push(segments[i][2]);\n    });\n    var segmentPointsDistance = getSegmentPointsDistance(segmentPoints);\n    var lineSegmentNum = segmentPointsDistance.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    var segmentlength = segmentPointsDistance.map(function (seg) {\n      return getNumsSum(seg);\n    });\n    var totalLength = getNumsSum(segmentlength);\n    var avgLength = totalLength / lineSegmentNum; // Check if precision is reached\n\n    var allDeviations = getAllDeviations(segmentPointsDistance, avgLength);\n    if (allDeviations <= precision) return \"break\";\n    totalPointsNum = ceil(avgLength / precision * totalPointsNum * 1.1);\n    var segmentPointsNum = segmentlength.map(function (length) {\n      return ceil(length / totalLength * totalPointsNum);\n    }); // Calculate the points after redistribution\n\n    segmentPoints = getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum);\n    totalPointsNum = segmentPoints.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    var segmentPointsForLength = JSON.parse(JSON.stringify(segmentPoints));\n    segmentPointsForLength.forEach(function (seg, i) {\n      return seg.push(segments[i][2]);\n    });\n    segmentPointsDistance = getSegmentPointsDistance(segmentPointsForLength);\n    lineSegmentNum = segmentPointsDistance.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    segmentlength = segmentPointsDistance.map(function (seg) {\n      return getNumsSum(seg);\n    });\n    totalLength = getNumsSum(segmentlength);\n    avgLength = totalLength / lineSegmentNum;\n    var stepSize = 1 / totalPointsNum / 10; // Recursively for each segment of the polyline\n\n    getSegmentTPointFuns.forEach(function (getSegmentTPointFun, i) {\n      var currentSegmentPointsNum = segmentPointsNum[i];\n      var t = new Array(currentSegmentPointsNum).fill('').map(function (foo, j) {\n        return j / segmentPointsNum[i];\n      }); // Repeated recursive offset\n\n      for (var r = 0; r < rounds; r++) {\n        var distance = getSegmentPointsDistance([segmentPoints[i]])[0];\n        var deviations = distance.map(function (d) {\n          return d - avgLength;\n        });\n        var offset = 0;\n\n        for (var j = 0; j < currentSegmentPointsNum; j++) {\n          if (j === 0) return;\n          offset += deviations[j - 1];\n          t[j] -= stepSize * offset;\n          if (t[j] > 1) t[j] = 1;\n          if (t[j] < 0) t[j] = 0;\n          segmentPoints[i][j] = getSegmentTPointFun(t[j]);\n        }\n      }\n    });\n    rounds *= 4;\n    cycles++;\n  };\n\n  do {\n    var _ret = _loop();\n\n    if (_ret === \"break\") break;\n  } while (rounds <= 1025);\n\n  segmentPoints = segmentPoints.reduce(function (all, seg) {\n    return all.concat(seg);\n  }, []);\n  return {\n    segmentPoints: segmentPoints,\n    cycles: cycles,\n    rounds: rounds\n  };\n}\n/**\r\n * @description Get the polyline corresponding to the Bezier curve\r\n * @param {Array} bezierCurve BezierCurve data\r\n * @param {Number} precision  Calculation accuracy. Recommended for 1-20. Default = 5\r\n * @return {Array|Boolean} Point data that constitutes a polyline after calculation (Invalid input will return false)\r\n */\n\n\nfunction bezierCurveToPolyline(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (!bezierCurve) {\n    console.error('bezierCurveToPolyline: Missing parameters!');\n    return false;\n  }\n\n  if (!(bezierCurve instanceof Array)) {\n    console.error('bezierCurveToPolyline: Parameter bezierCurve must be an array!');\n    return false;\n  }\n\n  if (typeof precision !== 'number') {\n    console.error('bezierCurveToPolyline: Parameter precision must be a number!');\n    return false;\n  }\n\n  var _abstractBezierCurveT = abstractBezierCurveToPolyline(bezierCurve, precision),\n      segmentPoints = _abstractBezierCurveT.segmentPoints;\n\n  return segmentPoints;\n}\n/**\r\n * @description Get the bezier curve length\r\n * @param {Array} bezierCurve bezierCurve data\r\n * @param {Number} precision  calculation accuracy. Recommended for 5-10. Default = 5\r\n * @return {Number|Boolean} BezierCurve length (Invalid input will return false)\r\n */\n\n\nfunction getBezierCurveLength(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (!bezierCurve) {\n    console.error('getBezierCurveLength: Missing parameters!');\n    return false;\n  }\n\n  if (!(bezierCurve instanceof Array)) {\n    console.error('getBezierCurveLength: Parameter bezierCurve must be an array!');\n    return false;\n  }\n\n  if (typeof precision !== 'number') {\n    console.error('getBezierCurveLength: Parameter precision must be a number!');\n    return false;\n  }\n\n  var _abstractBezierCurveT2 = abstractBezierCurveToPolyline(bezierCurve, precision),\n      segmentPoints = _abstractBezierCurveT2.segmentPoints; // Calculate the total length of the points that make up the polyline\n\n\n  var pointsDistance = getSegmentPointsDistance([segmentPoints])[0];\n  var length = getNumsSum(pointsDistance);\n  return length;\n}\n\nvar _default = bezierCurveToPolyline;\nexports[\"default\"] = _default;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}}],"sources":{"../node_modules/@jiaminghi/bezier-curve/lib/core/bezierCurveToPolyline.js":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bezierCurveToPolyline = bezierCurveToPolyline;\nexports.getBezierCurveLength = getBezierCurveLength;\nexports[\"default\"] = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar sqrt = Math.sqrt,\n    pow = Math.pow,\n    ceil = Math.ceil,\n    abs = Math.abs; // Initialize the number of points per curve\n\nvar defaultSegmentPointsNum = 50;\n/**\r\n * @example data structure of bezierCurve\r\n * bezierCurve = [\r\n *  // Starting point of the curve\r\n *  [10, 10],\r\n *  // BezierCurve segment data (controlPoint1, controlPoint2, endPoint)\r\n *  [\r\n *    [20, 20], [40, 20], [50, 10]\r\n *  ],\r\n *  ...\r\n * ]\r\n */\n\n/**\r\n * @description               Abstract the curve as a polyline consisting of N points\r\n * @param {Array} bezierCurve bezierCurve data\r\n * @param {Number} precision  calculation accuracy. Recommended for 1-20. Default = 5\r\n * @return {Object}           Calculation results and related data\r\n * @return {Array}            Option.segmentPoints Point data that constitutes a polyline after calculation\r\n * @return {Number}           Option.cycles Number of iterations\r\n * @return {Number}           Option.rounds The number of recursions for the last iteration\r\n */\n\nfunction abstractBezierCurveToPolyline(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  var segmentsNum = bezierCurve.length - 1;\n  var startPoint = bezierCurve[0];\n  var endPoint = bezierCurve[segmentsNum][2];\n  var segments = bezierCurve.slice(1);\n  var getSegmentTPointFuns = segments.map(function (seg, i) {\n    var beginPoint = i === 0 ? startPoint : segments[i - 1][2];\n    return createGetBezierCurveTPointFun.apply(void 0, [beginPoint].concat((0, _toConsumableArray2[\"default\"])(seg)));\n  }); // Initialize the curve to a polyline\n\n  var segmentPointsNum = new Array(segmentsNum).fill(defaultSegmentPointsNum);\n  var segmentPoints = getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum); // Calculate uniformly distributed points by iteratively\n\n  var result = calcUniformPointsByIteration(segmentPoints, getSegmentTPointFuns, segments, precision);\n  result.segmentPoints.push(endPoint);\n  return result;\n}\n/**\r\n * @description  Generate a method for obtaining corresponding point by t according to curve data\r\n * @param {Array} beginPoint    BezierCurve begin point. [x, y]\r\n * @param {Array} controlPoint1 BezierCurve controlPoint1. [x, y]\r\n * @param {Array} controlPoint2 BezierCurve controlPoint2. [x, y]\r\n * @param {Array} endPoint      BezierCurve end point. [x, y]\r\n * @return {Function} Expected function\r\n */\n\n\nfunction createGetBezierCurveTPointFun(beginPoint, controlPoint1, controlPoint2, endPoint) {\n  return function (t) {\n    var tSubed1 = 1 - t;\n    var tSubed1Pow3 = pow(tSubed1, 3);\n    var tSubed1Pow2 = pow(tSubed1, 2);\n    var tPow3 = pow(t, 3);\n    var tPow2 = pow(t, 2);\n    return [beginPoint[0] * tSubed1Pow3 + 3 * controlPoint1[0] * t * tSubed1Pow2 + 3 * controlPoint2[0] * tPow2 * tSubed1 + endPoint[0] * tPow3, beginPoint[1] * tSubed1Pow3 + 3 * controlPoint1[1] * t * tSubed1Pow2 + 3 * controlPoint2[1] * tPow2 * tSubed1 + endPoint[1] * tPow3];\n  };\n}\n/**\r\n * @description Get the distance between two points\r\n * @param {Array} point1 BezierCurve begin point. [x, y]\r\n * @param {Array} point2 BezierCurve controlPoint1. [x, y]\r\n * @return {Number} Expected distance\r\n */\n\n\nfunction getTwoPointDistance(_ref, _ref2) {\n  var _ref3 = (0, _slicedToArray2[\"default\"])(_ref, 2),\n      ax = _ref3[0],\n      ay = _ref3[1];\n\n  var _ref4 = (0, _slicedToArray2[\"default\"])(_ref2, 2),\n      bx = _ref4[0],\n      by = _ref4[1];\n\n  return sqrt(pow(ax - bx, 2) + pow(ay - by, 2));\n}\n/**\r\n * @description Get the sum of the array of numbers\r\n * @param {Array} nums An array of numbers\r\n * @return {Number} Expected sum\r\n */\n\n\nfunction getNumsSum(nums) {\n  return nums.reduce(function (sum, num) {\n    return sum + num;\n  }, 0);\n}\n/**\r\n * @description Get the distance of multiple sets of points\r\n * @param {Array} segmentPoints Multiple sets of point data\r\n * @return {Array} Distance of multiple sets of point data\r\n */\n\n\nfunction getSegmentPointsDistance(segmentPoints) {\n  return segmentPoints.map(function (points, i) {\n    return new Array(points.length - 1).fill(0).map(function (temp, j) {\n      return getTwoPointDistance(points[j], points[j + 1]);\n    });\n  });\n}\n/**\r\n * @description Get the distance of multiple sets of points\r\n * @param {Array} segmentPoints Multiple sets of point data\r\n * @return {Array} Distance of multiple sets of point data\r\n */\n\n\nfunction getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum) {\n  return getSegmentTPointFuns.map(function (getSegmentTPointFun, i) {\n    var tGap = 1 / segmentPointsNum[i];\n    return new Array(segmentPointsNum[i]).fill('').map(function (foo, j) {\n      return getSegmentTPointFun(j * tGap);\n    });\n  });\n}\n/**\r\n * @description Get the sum of deviations between line segment and the average length\r\n * @param {Array} segmentPointsDistance Segment length of polyline\r\n * @param {Number} avgLength            Average length of the line segment\r\n * @return {Number} Deviations\r\n */\n\n\nfunction getAllDeviations(segmentPointsDistance, avgLength) {\n  return segmentPointsDistance.map(function (seg) {\n    return seg.map(function (s) {\n      return abs(s - avgLength);\n    });\n  }).map(function (seg) {\n    return getNumsSum(seg);\n  }).reduce(function (total, v) {\n    return total + v;\n  }, 0);\n}\n/**\r\n * @description Calculate uniformly distributed points by iteratively\r\n * @param {Array} segmentPoints        Multiple setd of points that make up a polyline\r\n * @param {Array} getSegmentTPointFuns Functions of get a point on the curve with t\r\n * @param {Array} segments             BezierCurve data\r\n * @param {Number} precision           Calculation accuracy\r\n * @return {Object} Calculation results and related data\r\n * @return {Array}  Option.segmentPoints Point data that constitutes a polyline after calculation\r\n * @return {Number} Option.cycles Number of iterations\r\n * @return {Number} Option.rounds The number of recursions for the last iteration\r\n */\n\n\nfunction calcUniformPointsByIteration(segmentPoints, getSegmentTPointFuns, segments, precision) {\n  // The number of loops for the current iteration\n  var rounds = 4; // Number of iterations\n\n  var cycles = 1;\n\n  var _loop = function _loop() {\n    // Recalculate the number of points per curve based on the last iteration data\n    var totalPointsNum = segmentPoints.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0); // Add last points of segment to calc exact segment length\n\n    segmentPoints.forEach(function (seg, i) {\n      return seg.push(segments[i][2]);\n    });\n    var segmentPointsDistance = getSegmentPointsDistance(segmentPoints);\n    var lineSegmentNum = segmentPointsDistance.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    var segmentlength = segmentPointsDistance.map(function (seg) {\n      return getNumsSum(seg);\n    });\n    var totalLength = getNumsSum(segmentlength);\n    var avgLength = totalLength / lineSegmentNum; // Check if precision is reached\n\n    var allDeviations = getAllDeviations(segmentPointsDistance, avgLength);\n    if (allDeviations <= precision) return \"break\";\n    totalPointsNum = ceil(avgLength / precision * totalPointsNum * 1.1);\n    var segmentPointsNum = segmentlength.map(function (length) {\n      return ceil(length / totalLength * totalPointsNum);\n    }); // Calculate the points after redistribution\n\n    segmentPoints = getSegmentPointsByNum(getSegmentTPointFuns, segmentPointsNum);\n    totalPointsNum = segmentPoints.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    var segmentPointsForLength = JSON.parse(JSON.stringify(segmentPoints));\n    segmentPointsForLength.forEach(function (seg, i) {\n      return seg.push(segments[i][2]);\n    });\n    segmentPointsDistance = getSegmentPointsDistance(segmentPointsForLength);\n    lineSegmentNum = segmentPointsDistance.reduce(function (total, seg) {\n      return total + seg.length;\n    }, 0);\n    segmentlength = segmentPointsDistance.map(function (seg) {\n      return getNumsSum(seg);\n    });\n    totalLength = getNumsSum(segmentlength);\n    avgLength = totalLength / lineSegmentNum;\n    var stepSize = 1 / totalPointsNum / 10; // Recursively for each segment of the polyline\n\n    getSegmentTPointFuns.forEach(function (getSegmentTPointFun, i) {\n      var currentSegmentPointsNum = segmentPointsNum[i];\n      var t = new Array(currentSegmentPointsNum).fill('').map(function (foo, j) {\n        return j / segmentPointsNum[i];\n      }); // Repeated recursive offset\n\n      for (var r = 0; r < rounds; r++) {\n        var distance = getSegmentPointsDistance([segmentPoints[i]])[0];\n        var deviations = distance.map(function (d) {\n          return d - avgLength;\n        });\n        var offset = 0;\n\n        for (var j = 0; j < currentSegmentPointsNum; j++) {\n          if (j === 0) return;\n          offset += deviations[j - 1];\n          t[j] -= stepSize * offset;\n          if (t[j] > 1) t[j] = 1;\n          if (t[j] < 0) t[j] = 0;\n          segmentPoints[i][j] = getSegmentTPointFun(t[j]);\n        }\n      }\n    });\n    rounds *= 4;\n    cycles++;\n  };\n\n  do {\n    var _ret = _loop();\n\n    if (_ret === \"break\") break;\n  } while (rounds <= 1025);\n\n  segmentPoints = segmentPoints.reduce(function (all, seg) {\n    return all.concat(seg);\n  }, []);\n  return {\n    segmentPoints: segmentPoints,\n    cycles: cycles,\n    rounds: rounds\n  };\n}\n/**\r\n * @description Get the polyline corresponding to the Bezier curve\r\n * @param {Array} bezierCurve BezierCurve data\r\n * @param {Number} precision  Calculation accuracy. Recommended for 1-20. Default = 5\r\n * @return {Array|Boolean} Point data that constitutes a polyline after calculation (Invalid input will return false)\r\n */\n\n\nfunction bezierCurveToPolyline(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (!bezierCurve) {\n    console.error('bezierCurveToPolyline: Missing parameters!');\n    return false;\n  }\n\n  if (!(bezierCurve instanceof Array)) {\n    console.error('bezierCurveToPolyline: Parameter bezierCurve must be an array!');\n    return false;\n  }\n\n  if (typeof precision !== 'number') {\n    console.error('bezierCurveToPolyline: Parameter precision must be a number!');\n    return false;\n  }\n\n  var _abstractBezierCurveT = abstractBezierCurveToPolyline(bezierCurve, precision),\n      segmentPoints = _abstractBezierCurveT.segmentPoints;\n\n  return segmentPoints;\n}\n/**\r\n * @description Get the bezier curve length\r\n * @param {Array} bezierCurve bezierCurve data\r\n * @param {Number} precision  calculation accuracy. Recommended for 5-10. Default = 5\r\n * @return {Number|Boolean} BezierCurve length (Invalid input will return false)\r\n */\n\n\nfunction getBezierCurveLength(bezierCurve) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n\n  if (!bezierCurve) {\n    console.error('getBezierCurveLength: Missing parameters!');\n    return false;\n  }\n\n  if (!(bezierCurve instanceof Array)) {\n    console.error('getBezierCurveLength: Parameter bezierCurve must be an array!');\n    return false;\n  }\n\n  if (typeof precision !== 'number') {\n    console.error('getBezierCurveLength: Parameter precision must be a number!');\n    return false;\n  }\n\n  var _abstractBezierCurveT2 = abstractBezierCurveToPolyline(bezierCurve, precision),\n      segmentPoints = _abstractBezierCurveT2.segmentPoints; // Calculate the total length of the points that make up the polyline\n\n\n  var pointsDistance = getSegmentPointsDistance([segmentPoints])[0];\n  var length = getNumsSum(pointsDistance);\n  return length;\n}\n\nvar _default = bezierCurveToPolyline;\nexports[\"default\"] = _default;"},"lineCount":335}},"error":null,"hash":"b0534ca137709c0df205c3b2944515a2","cacheData":{"env":{}}}