{"id":"../node_modules/echarts/lib/stream/task.js","dependencies":[{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\package.json","includedInParent":true,"mtime":1589276068111},{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\.browserslistrc","includedInParent":true,"mtime":1568098705750},{"name":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\echarts\\package.json","includedInParent":true,"mtime":1583149628906},{"name":"zrender/lib/core/util","loc":{"line":21,"column":20},"parent":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\echarts\\lib\\stream\\task.js","resolved":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\zrender\\lib\\core\\util.js"},{"name":"../config","loc":{"line":26,"column":22},"parent":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\echarts\\lib\\stream\\task.js","resolved":"E:\\myProjects\\大屏空demo\\vueDemo\\node_modules\\echarts\\lib\\config.js"}],"generated":{"js":"\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":314,"column":0},"generated":{"line":315,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":315,"column":0},"generated":{"line":316,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":316,"column":0},"generated":{"line":317,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":317,"column":0},"generated":{"line":318,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":318,"column":0},"generated":{"line":319,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":319,"column":0},"generated":{"line":320,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":320,"column":0},"generated":{"line":321,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":321,"column":0},"generated":{"line":322,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":322,"column":0},"generated":{"line":323,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":323,"column":0},"generated":{"line":324,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":324,"column":0},"generated":{"line":325,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":325,"column":0},"generated":{"line":326,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":326,"column":0},"generated":{"line":327,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":327,"column":0},"generated":{"line":328,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":328,"column":0},"generated":{"line":329,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":329,"column":0},"generated":{"line":330,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":330,"column":0},"generated":{"line":331,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":331,"column":0},"generated":{"line":332,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":332,"column":0},"generated":{"line":333,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":333,"column":0},"generated":{"line":334,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":334,"column":0},"generated":{"line":335,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":335,"column":0},"generated":{"line":336,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":336,"column":0},"generated":{"line":337,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":337,"column":0},"generated":{"line":338,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":338,"column":0},"generated":{"line":339,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":339,"column":0},"generated":{"line":340,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":340,"column":0},"generated":{"line":341,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":341,"column":0},"generated":{"line":342,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":342,"column":0},"generated":{"line":343,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":343,"column":0},"generated":{"line":344,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":344,"column":0},"generated":{"line":345,"column":0}},{"source":"../node_modules/echarts/lib/stream/task.js","original":{"line":345,"column":0},"generated":{"line":346,"column":0}}],"sources":{"../node_modules/echarts/lib/stream/task.js":"\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar assert = _util.assert;\nvar isArray = _util.isArray;\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @param {Object} define\n * @return See the return of `createTask`.\n */\nfunction createTask(define) {\n  return new Task(define);\n}\n/**\n * @constructor\n * @param {Object} define\n * @param {Function} define.reset Custom reset\n * @param {Function} [define.plan] Returns 'reset' indicate reset immediately.\n * @param {Function} [define.count] count is used to determin data task.\n * @param {Function} [define.onDirty] count is used to determin data task.\n */\n\n\nfunction Task(define) {\n  define = define || {};\n  this._reset = define.reset;\n  this._plan = define.plan;\n  this._count = define.count;\n  this._onDirty = define.onDirty;\n  this._dirty = true; // Context must be specified implicitly, to\n  // avoid miss update context when model changed.\n\n  this.context;\n}\n\nvar taskProto = Task.prototype;\n/**\n * @param {Object} performArgs\n * @param {number} [performArgs.step] Specified step.\n * @param {number} [performArgs.skip] Skip customer perform call.\n * @param {number} [performArgs.modBy] Sampling window size.\n * @param {number} [performArgs.modDataCount] Sampling count.\n */\n\ntaskProto.perform = function (performArgs) {\n  var upTask = this._upstream;\n  var skip = performArgs && performArgs.skip; // TODO some refactor.\n  // Pull data. Must pull data each time, because context.data\n  // may be updated by Series.setData.\n\n  if (this._dirty && upTask) {\n    var context = this.context;\n    context.data = context.outputData = upTask.context.outputData;\n  }\n\n  if (this.__pipeline) {\n    this.__pipeline.currentTask = this;\n  }\n\n  var planResult;\n\n  if (this._plan && !skip) {\n    planResult = this._plan(this.context);\n  } // Support sharding by mod, which changes the render sequence and makes the rendered graphic\n  // elements uniformed distributed when progress, especially when moving or zooming.\n\n\n  var lastModBy = normalizeModBy(this._modBy);\n  var lastModDataCount = this._modDataCount || 0;\n  var modBy = normalizeModBy(performArgs && performArgs.modBy);\n  var modDataCount = performArgs && performArgs.modDataCount || 0;\n\n  if (lastModBy !== modBy || lastModDataCount !== modDataCount) {\n    planResult = 'reset';\n  }\n\n  function normalizeModBy(val) {\n    !(val >= 1) && (val = 1); // jshint ignore:line\n\n    return val;\n  }\n\n  var forceFirstProgress;\n\n  if (this._dirty || planResult === 'reset') {\n    this._dirty = false;\n    forceFirstProgress = reset(this, skip);\n  }\n\n  this._modBy = modBy;\n  this._modDataCount = modDataCount;\n  var step = performArgs && performArgs.step;\n\n  if (upTask) {\n    this._dueEnd = upTask._outputDueEnd;\n  } // DataTask or overallTask\n  else {\n      this._dueEnd = this._count ? this._count(this.context) : Infinity;\n    } // Note: Stubs, that its host overall task let it has progress, has progress.\n  // If no progress, pass index from upstream to downstream each time plan called.\n\n\n  if (this._progress) {\n    var start = this._dueIndex;\n    var end = Math.min(step != null ? this._dueIndex + step : Infinity, this._dueEnd);\n\n    if (!skip && (forceFirstProgress || start < end)) {\n      var progress = this._progress;\n\n      if (isArray(progress)) {\n        for (var i = 0; i < progress.length; i++) {\n          doProgress(this, progress[i], start, end, modBy, modDataCount);\n        }\n      } else {\n        doProgress(this, progress, start, end, modBy, modDataCount);\n      }\n    }\n\n    this._dueIndex = end; // If no `outputDueEnd`, assume that output data and\n    // input data is the same, so use `dueIndex` as `outputDueEnd`.\n\n    var outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : end;\n    this._outputDueEnd = outputDueEnd;\n  } else {\n    // (1) Some overall task has no progress.\n    // (2) Stubs, that its host overall task do not let it has progress, has no progress.\n    // This should always be performed so it can be passed to downstream.\n    this._dueIndex = this._outputDueEnd = this._settedOutputEnd != null ? this._settedOutputEnd : this._dueEnd;\n  }\n\n  return this.unfinished();\n};\n\nvar iterator = function () {\n  var end;\n  var current;\n  var modBy;\n  var modDataCount;\n  var winCount;\n  var it = {\n    reset: function (s, e, sStep, sCount) {\n      current = s;\n      end = e;\n      modBy = sStep;\n      modDataCount = sCount;\n      winCount = Math.ceil(modDataCount / modBy);\n      it.next = modBy > 1 && modDataCount > 0 ? modNext : sequentialNext;\n    }\n  };\n  return it;\n\n  function sequentialNext() {\n    return current < end ? current++ : null;\n  }\n\n  function modNext() {\n    var dataIndex = current % winCount * modBy + Math.ceil(current / winCount);\n    var result = current >= end ? null : dataIndex < modDataCount ? dataIndex // If modDataCount is smaller than data.count() (consider `appendData` case),\n    // Use normal linear rendering mode.\n    : current;\n    current++;\n    return result;\n  }\n}();\n\ntaskProto.dirty = function () {\n  this._dirty = true;\n  this._onDirty && this._onDirty(this.context);\n};\n\nfunction doProgress(taskIns, progress, start, end, modBy, modDataCount) {\n  iterator.reset(start, end, modBy, modDataCount);\n  taskIns._callingProgress = progress;\n\n  taskIns._callingProgress({\n    start: start,\n    end: end,\n    count: end - start,\n    next: iterator.next\n  }, taskIns.context);\n}\n\nfunction reset(taskIns, skip) {\n  taskIns._dueIndex = taskIns._outputDueEnd = taskIns._dueEnd = 0;\n  taskIns._settedOutputEnd = null;\n  var progress;\n  var forceFirstProgress;\n\n  if (!skip && taskIns._reset) {\n    progress = taskIns._reset(taskIns.context);\n\n    if (progress && progress.progress) {\n      forceFirstProgress = progress.forceFirstProgress;\n      progress = progress.progress;\n    } // To simplify no progress checking, array must has item.\n\n\n    if (isArray(progress) && !progress.length) {\n      progress = null;\n    }\n  }\n\n  taskIns._progress = progress;\n  taskIns._modBy = taskIns._modDataCount = null;\n  var downstream = taskIns._downstream;\n  downstream && downstream.dirty();\n  return forceFirstProgress;\n}\n/**\n * @return {boolean}\n */\n\n\ntaskProto.unfinished = function () {\n  return this._progress && this._dueIndex < this._dueEnd;\n};\n/**\n * @param {Object} downTask The downstream task.\n * @return {Object} The downstream task.\n */\n\n\ntaskProto.pipe = function (downTask) {\n  // If already downstream, do not dirty downTask.\n  if (this._downstream !== downTask || this._dirty) {\n    this._downstream = downTask;\n    downTask._upstream = this;\n    downTask.dirty();\n  }\n};\n\ntaskProto.dispose = function () {\n  if (this._disposed) {\n    return;\n  }\n\n  this._upstream && (this._upstream._downstream = null);\n  this._downstream && (this._downstream._upstream = null);\n  this._dirty = false;\n  this._disposed = true;\n};\n\ntaskProto.getUpstream = function () {\n  return this._upstream;\n};\n\ntaskProto.getDownstream = function () {\n  return this._downstream;\n};\n\ntaskProto.setOutputEnd = function (end) {\n  // This only happend in dataTask, dataZoom, map, currently.\n  // where dataZoom do not set end each time, but only set\n  // when reset. So we should record the setted end, in case\n  // that the stub of dataZoom perform again and earse the\n  // setted end by upstream.\n  this._outputDueEnd = this._settedOutputEnd = end;\n}; ///////////////////////////////////////////////////////////\n// For stream debug (Should be commented out after used!)\n// Usage: printTask(this, 'begin');\n// Usage: printTask(this, null, {someExtraProp});\n// function printTask(task, prefix, extra) {\n//     window.ecTaskUID == null && (window.ecTaskUID = 0);\n//     task.uidDebug == null && (task.uidDebug = `task_${window.ecTaskUID++}`);\n//     task.agent && task.agent.uidDebug == null && (task.agent.uidDebug = `task_${window.ecTaskUID++}`);\n//     var props = [];\n//     if (task.__pipeline) {\n//         var val = `${task.__idxInPipeline}/${task.__pipeline.tail.__idxInPipeline} ${task.agent ? '(stub)' : ''}`;\n//         props.push({text: 'idx', value: val});\n//     } else {\n//         var stubCount = 0;\n//         task.agentStubMap.each(() => stubCount++);\n//         props.push({text: 'idx', value: `overall (stubs: ${stubCount})`});\n//     }\n//     props.push({text: 'uid', value: task.uidDebug});\n//     if (task.__pipeline) {\n//         props.push({text: 'pid', value: task.__pipeline.id});\n//         task.agent && props.push(\n//             {text: 'stubFor', value: task.agent.uidDebug}\n//         );\n//     }\n//     props.push(\n//         {text: 'dirty', value: task._dirty},\n//         {text: 'dueIndex', value: task._dueIndex},\n//         {text: 'dueEnd', value: task._dueEnd},\n//         {text: 'outputDueEnd', value: task._outputDueEnd}\n//     );\n//     if (extra) {\n//         Object.keys(extra).forEach(key => {\n//             props.push({text: key, value: extra[key]});\n//         });\n//     }\n//     var args = ['color: blue'];\n//     var msg = `%c[${prefix || 'T'}] %c` + props.map(item => (\n//         args.push('color: black', 'color: red'),\n//         `${item.text}: %c${item.value}`\n//     )).join('%c, ');\n//     console.log.apply(console, [msg].concat(args));\n//     // console.log(this);\n// }\n\n\nexports.createTask = createTask;"},"lineCount":346}},"error":null,"hash":"2760483e8663bea9a7d59aef44de04e4","cacheData":{"env":{}}}